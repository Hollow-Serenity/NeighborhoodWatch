@using Microsoft.AspNetCore.Identity
@using BuurtApplicatie.Areas.Identity.Data

@inject SignInManager<BuurtApplicatieUser> SignInManager
@inject UserManager<BuurtApplicatieUser> UserManager
@inject BuurtApplicatieDbContext DbContext

<div class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    var userIsModerator = await UserManager.IsInRoleAsync(user, "Moderator");
    @if (userIsModerator)
    {
        <a class="nav-link text-light" asp-action="ReportedPosts" asp-controller="Posts">Gebruiker reports</a>
    }
    @if (DbContext.DeletedPosts.Any(dp => dp.UserId == user.Id))
    {
        <a class="nav-link text-light" asp-action="DeletedPosts" asp-controller="Posts">Verwijderde meldingen</a>
    }
    <div class="navbar-nav dropdown">
        <a href="#" class="text-decoration-none text-light dropdown-toggle" data-toggle="dropdown">
            @await Component.InvokeAsync("ProfilePicture", new { altText = "Uw profielfoto" })
            @UserManager.GetUserName(User)
        </a>
        <div class="dropdown-menu dropdown-menu-sm-right">
            <a class="dropdown-item" asp-controller="Posts" asp-action="MyPosts">Mijn Meldingen</a>
            <a id="manage" class="dropdown-item" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Profielinstellingen</a>
            <div class="dropdown-divider"></div>
            <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="dropdown-item text-decoration-none text-left btn btn-link text-dark">Uitloggen</button>
            </form>
        </div>
    </div>
}
else
{
    <a class="nav-link text-light" id="register" asp-area="Identity" asp-page="/Account/Register">Registreren</a>
    <a class="nav-link text-light" id="login" asp-area="Identity" asp-page="/Account/Login">Inloggen</a>
}
</div>
